apiVersion: kyverno.io/v1
kind: ClusterPolicy
metadata:
  name: cluster-autoscaler-config
  annotations:
    policies.kyverno.io/title: Generate Autoscaler ConfigMap
    policies.kyverno.io/category: Rancher
    policies.kyverno.io/subject: ConfigMap
    policies.kyverno.io/description: >-
      This policy will generate configmaps from Rancher-provisioned clusters' kubeconfigs
      for use by the Kubernetes-Autoscaler.
spec:
  generateExistingOnPolicyUpdate: true
  rules:
  - name: generate-autoscaling-config
    match:
        all:
        - resources:
            kinds:
            - provisioning.cattle.io/v1/Cluster
    exclude:
      any:
      - resources:
          namespaces:
          - fleet-local
    preconditions:
      all:
      - key: "{{ request.object.status.ready || false }}"
        operator: Equals
        value: true
      - key: "{{ request.object.status.clientSecretName || '' }}"
        operator: NotEquals
        value: ''
    context:
    - name: rancherToken
      apiCall:
        urlPath: "/api/v1/namespaces/{{request.object.metadata.namespace}}/secrets/{{request.object.status.clientSecretName}}"
        jmesPath: 'base64_decode(data.token)'
    - name: rancherUrl
      variable:
        value: "https://rancher.cattle-system.svc.cluster.local"
    - name: clusterName
      variable:
        jmesPath: 'to_string(request.object.metadata.name)'
    - name: clusterNamespace
      variable:
        jmesPath: 'to_string(request.object.metadata.namespace)'
    - name: cloudConfig
      variable: 
        value: |
          url: {{rancherUrl}}
          token: {{rancherToken}}
          # name and namespace of the clusters.provisioning.cattle.io resource on the
          # rancher server
          clusterName: {{clusterName}}
          clusterNamespace: {{clusterNamespace}}
    generate:
      apiVersion: v1
      kind: Secret
      name: "{{request.object.metadata.name}}-autoscaler-cloud-config"
      namespace: "{{request.object.metadata.namespace}}"
      synchronize: true
      data:
        kind: Secret
        type: Opaque
        metadata:
          ownerReferences:
          - apiVersion: provisioning.cattle.io/v1
            kind: Cluster
            name: "{{request.object.metadata.name}}"
            uid: "{{request.object.metadata.uid}}"
        data:
          cloud-config: "{{ cloudConfig | base64_encode(@) }}"
        # kind: ConfigMap
        # metadata:
        #   ownerReferences:
        #   - apiVersion: provisioning.cattle.io/v1
        #     kind: Cluster
        #     name: "{{request.object.metadata.name}}"
        #     uid: "{{request.object.metadata.uid}}"
        # data:
        #   url: https://rancher.cattle-system.svc.cluster.local
        #   token: "{{rancherToken}}"
        #   # name and namespace of the clusters.provisioning.cattle.io resource on the
        #   # rancher server
        #   clusterName: "{{request.object.metadata.name}}"
        #   clusterNamespace: "{{request.object.metadata.namespace}}"